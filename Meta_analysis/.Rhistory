theme(legend.text = element_text(size = 12))
library(lme4)
library(nlme)
library(lmerTest)
library(emmeans)
library(easystats)
library(ggpubr)
library(multcomp)
library(emmeans)
library(easystats)
install.packages("emmeans")
install.packages("easystats")
# Reorganizar los niveles de Location
metadata_with_hill$Study_zone <- relevel(metadata_with_hill$Location, ref = "El Cacahuate")
# Reorganizar los niveles de Location
metadata_with_hill$Study_zone <- relevel(metadata_with_hill$Study_zone, ref = "Laguna Cacahuate")
names(metadata_with_hill)
#plot
Studyzone_colors <- c("Rio San Pedro" = "#1f77b4", "Celestún" = "#ff7f0e", "Laguna Cacahuate" = "#2ca02c")
hill_barplot_explore <- metadata_with_hill %>%
pivot_longer(cols = q0:q2, names_to = "q", values_to = "value") %>%
filter(q %in% c("q0", "q1", "q2")) %>%
mutate(
qs = case_when(
q == "q0" ~ "q0=Observed",
q == "q1" ~ "q1=Exp Shannon",
q == "q2" ~ "q2=Inv Simpson",
)) %>%
ggbarplot(
x = "Depth",
y = "value",
add = "mean_se",
facet.by = c("qs", "Study_zone"),
fill = "Depth"
) +
scale_fill_manual(values = Studyzone_colors) +
geom_jitter(size = 0.8, position = position_jitter(width = 0.1)) +
facet_grid(rows = vars(qs), cols = vars(Study_zone), scales = "free_y") +
theme(
strip.background =  element_blank(), #element_rect(fill = "")
strip.text.x = element_text(face= "bold", size = 13, margin = margin(0.5, 0, 0.5, 0)),
strip.text.y = element_text(face= "bold", size = 14, angle = 0, margin = margin(0, 0.5, 0, 0.5)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line = element_line(colour = "black"),
#panel.border = element_blank(),
panel.spacing.x = unit(0.5, "lines"),
panel.background = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(colour = "black", size = 11),
legend.position = "bottom"
) +
labs(
fill = "Depth",
y = "",
x = "",
title = "Biodiversity across Sites and Depths"
) +
theme(legend.text = element_text(size = 12))
hill_barplot_explore
hill_barplot_explore <- metadata_with_hill %>%
pivot_longer(cols = q0:q2, names_to = "q", values_to = "value") %>%
filter(q %in% c("q0", "q1", "q2")) %>%
mutate(
qs = case_when(
q == "q0" ~ "q0=Observed",
q == "q1" ~ "q1=Exp Shannon",
q == "q2" ~ "q2=Inv Simpson",
)) %>%
ggbarplot(
x = "Depth",
y = "value",
add = "mean_se",
facet.by = c("qs", "Study_zone"),
fill = "Depth"
) +
scale_fill_manual(values = Studyzone_colors) +
geom_jitter(size = 0.8, position = position_jitter(width = 0.1)) +
facet_grid(rows = vars(qs), cols = vars(Study_zone), scales = "free_y") +
theme(
strip.background =  element_blank(), #element_rect(fill = "")
strip.text.x = element_text(face= "bold", size = 13, margin = margin(0.5, 0, 0.5, 0)),
strip.text.y = element_text(face= "bold", size = 14, angle = 0, margin = margin(0, 0.5, 0, 0.5)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line = element_line(colour = "black"),
#panel.border = element_blank(),
panel.spacing.x = unit(0.5, "lines"),
panel.background = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(colour = "black", size = 11),
legend.position = "bottom"
) +
labs(
fill = "Study_zone",
y = "",
x = "",
title = "Biodiversity across Sites and Depths"
) +
theme(legend.text = element_text(size = 12))
hill_barplot_explore
hill_barplot_explore <- metadata_with_hill %>%
pivot_longer(cols = q0:q2, names_to = "q", values_to = "value") %>%
filter(q %in% c("q0", "q1", "q2")) %>%
mutate(
qs = case_when(
q == "q0" ~ "q0=Observed",
q == "q1" ~ "q1=Exp Shannon",
q == "q2" ~ "q2=Inv Simpson",
)) %>%
ggbarplot(
x = "Depth",
y = "value",
add = "mean_se",
facet.by = c("qs", "Study_zone"),
fill = "Study_zone"
) +
scale_fill_manual(values = Studyzone_colors) +
geom_jitter(size = 0.8, position = position_jitter(width = 0.1)) +
facet_grid(rows = vars(qs), cols = vars(Study_zone), scales = "free_y") +
theme(
strip.background =  element_blank(), #element_rect(fill = "")
strip.text.x = element_text(face= "bold", size = 13, margin = margin(0.5, 0, 0.5, 0)),
strip.text.y = element_text(face= "bold", size = 14, angle = 0, margin = margin(0, 0.5, 0, 0.5)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line = element_line(colour = "black"),
#panel.border = element_blank(),
panel.spacing.x = unit(0.5, "lines"),
panel.background = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_text(colour = "black", size = 11),
legend.position = "bottom"
) +
labs(
fill = "Study_zone",
y = "",
x = "",
title = "Biodiversity across Sites and Depths"
) +
theme(legend.text = element_text(size = 12))
hill_barplot_explore
ggsave("Hill_diversity_across_Sites_and_Depths_fltr.pdf", hill_barplot_explore, width = 11, height = 11)
names(metadata_with_hill)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | SampleID), data = metadata_with_hill)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + Depth + (1 | SampleID), data = metadata_with_hill)
summary(q0lmer)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + Depth + (1 | SRA), data = metadata_with_hill)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + Depth + (1 | Study_zone), data = metadata_with_hill)
# Asegúrate de que Study_zone es un factor
metadata_with_hill$Study_zone <- as.factor(metadata_with_hill$Study_zone)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | SampleID), data = metadata_with_hill)
View(metadata_with_hill)
physeq_qiime2 <- qza_to_phyloseq(
features = "results/04.Qiime2/taxonomy_and_filtered/cluster_table_filter_freq218_emc.qza",
#tree = "results/04.qiime/",
taxonomy = "results/04.Qiime2/taxonomy_and_filtered/taxonomyV3V4.qza",
metadata = "metadata10.tsv")
#Load libraries
sapply(c(cran_packages, bioc_packages, git_packages), require, character.only = TRUE)
physeq_qiime2 <- qza_to_phyloseq(
features = "results/04.Qiime2/taxonomy_and_filtered/cluster_table_filter_freq218_emc.qza",
#tree = "results/04.qiime/",
taxonomy = "results/04.Qiime2/taxonomy_and_filtered/taxonomyV3V4.qza",
metadata = "metadata10.tsv")
physeq_qiime2 <- qza_to_phyloseq(
features = "results/04.Qiime2/taxonomy_and_filtered/cluster_table_filter_freq218_emc.qza",
#tree = "results/04.qiime/",
taxonomy = "results/04.Qiime2/taxonomy_and_filtered/taxonomyV3V4.qza",
metadata = "metadata10.tsv")
physeq_qiime2 <- qza_to_phyloseq(
features = "results/04.Qiime2/taxonomy_and_filtered/cluster_table_filter_freq218_emc.qza",
#tree = "results/04.qiime/",
taxonomy = "results/04.Qiime2/taxonomy_and_filtered/taxonomyV3V4.qza",
metadata = "metadata10.tsv")
#filtrado de datos para usar solo los datos del rio san Pedro y Celestún
# Extraer metadatos del objeto phyloseq
metadatatonga <- data.frame(phyloseq::sample_data(physeq_qiime2), check.names = FALSE)
#Filtrar metadatos para incluir solo dos de los tres valores en Study_zone
filtered_metadatatonga <- metadatatonga[metadatatonga$Study_zone %in% c("Rio San Pedro", "Celestún","Laguna Cacahuate"), ]
#Filtrar de nueva cuenta para quedarnos solo con los datos que tengan 0.15 m de profundidad
filtere_metadatatnga2 <- filtered_metadatatonga[filtered_metadatatonga$Depth %in% c("0.15"), ]
#filtrar por tipo ecológico
filtered_metadatatonga3 <- filtere_metadatatnga2[filtere_metadatatnga2$Ecological_type %in% c("Fringe"), ]
# Filtrar el objeto phyloseq para que solo incluya las muestras seleccionadas
filtered_physeqonga <- prune_samples(rownames(filtered_metadatatonga3), physeq_qiime2)
#Obtener tabla de otu
otu_table_raw <- otu_table(filtered_physeqonga)
otu_table_df <- as.data.frame(otu_table_raw)
filtered_metadata <- as.data.frame(filtered_metadatatonga3)
# Get hill numbers
q0 <- hill_div(otu_table_df, qvalue = 0)
q1 <- hill_div(otu_table_df, qvalue = 1)
q2 <- hill_div(otu_table_df, qvalue = 2)
# Merge metadata with Hill numbers
q012f_all <- cbind(q0, q1, q2) %>% as.data.frame() %>% rownames_to_column(var = "SampleID")
library(dplyr)
metadata_with_hill <- q012f_all %>%
inner_join(filtered_metadata, by = c("SampleID"="SampleID"))
library(hilldiv)
library(tidyverse)
library(kableExtra)
metadata_with_hill <- q012f_all %>%
inner_join(filtered_metadata, by = c("SampleID"="SampleID"))
#save table
write.table(metadata_with_hill, "Metadata_with_hill.tsv", quote = FALSE, sep = "\t", row.names = TRUE, col.names=TRUE)
library(lme4)
library(nlme)
library(lmerTest)
library(pgirmess)
install.packages(pgirmess)
# Reorganizar los niveles de Location
metadata_with_hill$Study_zone <- relevel(metadata_with_hill$Study_zone, ref = "Laguna Cacahuate")
# Asegúrate de que Study_zone es un factor
metadata_with_hill$Study_zone <- as.factor(metadata_with_hill$Study_zone)
library(lme4)
# Reorganizar los niveles de Location
metadata_with_hill$Study_zone <- relevel(metadata_with_hill$Study_zone, ref = "Laguna Cacahuate")
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Resumen del modelo
summary(q0lmer)
# Realizar la prueba de permutación con lmerTest
perm_test <- rand(q0lmer, nsim = 1000)
#efectos
anova(q0lmer)
library(easystats)
check_model(q0lmer)
report(q0lmer)
# Obtener las diferencias significativas usando emmeans
q0_lmer_means <- emmeans(q0lmer, pairwise ~ Depth_cm)
# Obtener las diferencias significativas usando emmeans
q0_lmer_means <- emmeans(q0lmer, pairwise ~ Study_zone)
library(emmeans)
# Obtener las diferencias significativas usando emmeans
q0_lmer_means <- emmeans(q0lmer, pairwise ~ Study_zone)
# Obtener las letras de significancia
cld_results <- cld(object = q0_lmer_means$emmeans, Letters = letters)
library(easystats)
library(ggpubr)
library(multcomp)
install.packages("pgirmess")
# Obtener las letras de significancia
cld_results <- cld(object = q0_lmer_means$emmeans, Letters = letters)
install.packages("multcompView")
# Obtener las letras de significancia
cld_results <- cld(object = q0_lmer_means$emmeans, Letters = letters)
# Convertir a data frame
emmeans_df <- as.data.frame(cld_results)
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Depth, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
q0plot
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
# Reorganizar los niveles de Location
metadata_with_hill$Study_zone <- relevel(metadata_with_hill$Study_zone, ref = "Celestún")
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Realizar la prueba de permutación con lmerTest
perm_test <- rand(q0lmer, nsim = 1000)
# Resumen de los resultados de la prueba de permutación
perm_test
#efectos
anova(q0lmer)
check_model(q0lmer)
check_model(q0lmer)
report(q0lmer)
# Obtener las diferencias significativas usando emmeans
q0_lmer_means <- emmeans(q0lmer, pairwise ~ Study_zone)
# Obtener las letras de significancia
cld_results <- cld(object = q0_lmer_means$emmeans, Letters = letters)
# Convertir a data frame
emmeans_df <- as.data.frame(cld_results)
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
library(lme4)
library(nlme)
library(lmerTest)
library(pgirmess)
install.packages("pgirmess")
library(emmeans)
library(easystats)
library(ggpubr)
library(multcomp)
library(ggplot2)
library(cowplot)
library(hilldiv)
library(tidyverse)
library(kableExtra)
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
View(emmeans_df)
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0))
q0plot
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7)
q0plot
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9))
q0plot
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
#plot
Studyzone_colors <- c("Rio San Pedro" = "#2ca02c", "Celestún" = "#1f77b4", "Laguna Cacahuate" = "#5cd194")
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
library(ggpubr)
library(tidyverse)
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
View(emmeans_df)
View(filtered_metadatatonga3)
#Load libraries
sapply(c(cran_packages, bioc_packages, git_packages), require, character.only = TRUE)
physeq_qiime2 <- qza_to_phyloseq(
features = "results/04.Qiime2/taxonomy_and_filtered/cluster_table_filter_freq218_emc.qza",
#tree = "results/04.qiime/",
taxonomy = "results/04.Qiime2/taxonomy_and_filtered/taxonomyV3V4.qza",
metadata = "metadata11.tsv")
#filtrado de datos para usar solo los datos del rio san Pedro y Celestún
# Extraer metadatos del objeto phyloseq
metadatatonga <- data.frame(phyloseq::sample_data(physeq_qiime2), check.names = FALSE)
#Filtrar metadatos para incluir solo dos de los tres valores en Study_zone
filtered_metadatatonga <- metadatatonga[metadatatonga$Study_zone %in% c("Rio San Pedro", "Celestún","Laguna Cacahuate"), ]
#Filtrar de nueva cuenta para quedarnos solo con los datos que tengan 0.15 m de profundidad
filtere_metadatatnga2 <- filtered_metadatatonga[filtered_metadatatonga$Depth %in% c("0.15"), ]
#filtrar por tipo ecológico
filtered_metadatatonga3 <- filtere_metadatatnga2[filtere_metadatatnga2$Ecological_type %in% c("Fringe"), ]
# Filtrar el objeto phyloseq para que solo incluya las muestras seleccionadas
filtered_physeqonga <- prune_samples(rownames(filtered_metadatatonga3), physeq_qiime2)
library(hilldiv)
library(tidyverse)
library(kableExtra)
#Obtener tabla de otu
otu_table_raw <- otu_table(filtered_physeqonga)
otu_table_df <- as.data.frame(otu_table_raw)
filtered_metadata <- as.data.frame(filtered_metadatatonga3)
# Get hill numbers
q0 <- hill_div(otu_table_df, qvalue = 0)
q1 <- hill_div(otu_table_df, qvalue = 1)
q2 <- hill_div(otu_table_df, qvalue = 2)
# Merge metadata with Hill numbers
q012f_all <- cbind(q0, q1, q2) %>% as.data.frame() %>% rownames_to_column(var = "SampleID")
library(hilldiv)
library(tidyverse)
library(kableExtra)
library(dplyr)
metadata_with_hill <- q012f_all %>%
inner_join(filtered_metadata, by = c("SampleID"="SampleID"))
#plot
Studyzone_colors <- c("Rio San Pedro" = "#2ca02c", "Celestún" = "#1f77b4", "Laguna Cacahuate" = "#5cd194")
library(lme4)
library(nlme)
library(lmerTest)
library(pgirmess)
library(emmeans)
library(easystats)
library(ggpubr)
library(multcomp)
# Asegúrate de que Study_zone es un factor
metadata_with_hill$Study_zone <- as.factor(metadata_with_hill$Study_zone)
# Ajustar el modelo lineal mixto
q0lmer <- lmer(q0 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Obtener las diferencias significativas usando emmeans
q0_lmer_means <- emmeans(q0lmer, pairwise ~ Study_zone)
# Obtener las letras de significancia
cld_results <- cld(object = q0_lmer_means$emmeans, Letters = letters)
# Convertir a data frame
emmeans_df <- as.data.frame(cld_results)
# Crear el gráfico de barras con letras de significancia
q0plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q0)) +
geom_bar(data = emmeans_df, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_df, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_df, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold", position = position_dodge(0.9)) +
labs(title = "Richness", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q0plot
# Fitted linear mixed model
q1lmer <- lmer(q1 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Sig dif emmeans
q1_lmer_means <- emmeans(q1lmer, pairwise ~ Study_zone)
# letters
cld_resultsq1 <- cld(object = q1_lmer_means$emmeans, Letters = letters)
# Convert df
emmeans_dfq1 <- as.data.frame(cld_resultsq1)
# plot
q1plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q1)) +
geom_bar(data = emmeans_dfq1, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_dfq1, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_dfq1, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold",position = position_dodge(0.9)) +
labs(title = "Exp Shannon", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q1plot
# Fitted linear mixed model
q2lmer <- lmer(q2 ~ Study_zone + (1 | ID), data = metadata_with_hill)
# Sig dif emmeans
q2_lmer_means <- emmeans(q2lmer, pairwise ~ Study_zone)
# letters
cld_resultsq2 <- cld(object = q2_lmer_means$emmeans, Letters = letters)
# Convert df
emmeans_dfq2 <- as.data.frame(cld_resultsq2)
# plot
q2plot <- ggplot(metadata_with_hill, aes(x = Study_zone, y = q2)) +
geom_bar(data = emmeans_dfq2, aes(y = emmean, fill = Study_zone), stat = "identity", position = position_dodge(), color = "black", width = 0.7) +
geom_errorbar(data = emmeans_dfq2, aes(y = emmean, ymin = lower.CL, ymax = upper.CL), width = 0.2, position = position_dodge(0.9)) +
geom_jitter(aes(fill = Study_zone), width = 0.1, alpha = 0.4) +
geom_text(data = emmeans_dfq2, aes(y = emmean, label = .group), vjust = -9, color = "black", fontface = "bold",position = position_dodge(0.9)) +
labs(title = "Inv Simpson", y = NULL, x = NULL ) + #,
#caption = "letters by lmer emmeans") +
theme_bw() + scale_fill_manual(values = Studyzone_colors) +
theme(legend.position = "none")
q2plot
plot_grid(q0plot, q1plot, q2plot, labels = c("A", "B", "C"), ncol = 3)
library (cowplot)
plot_grid(q0plot, q1plot, q2plot, labels = c("A", "B", "C"), ncol = 3)
plot_grid(q0plot, q1plot, q2plot, labels = c("A", "B", "C"), ncol = 2)
