stressplot(nmds_bray)
nmds_bray_plot <- plot_ordination(physeq_qiime2, nmds_bray, label = "Sample",
color = "Location", shape = "Location") + theme_bw() +
labs(col = "Location") + labs(title="NMDS, Bray-Curtis distance\nANOSIM Location: R=0.3246, p=0.0001, Permutations=9999") +
geom_point(size=3) + theme_bw()
nmds_bray_plot <- nmds_bray_plot +
annotate("text", x = Inf, y = -Inf, label = paste("Stress:", var_stress_nmds_bray),
hjust = 2.1, vjust = -1.9, size = 4)
nmds_bray_plot
#pdf("results/plots/03.diversity/04.NMDS_Shepard_Bray_Fit.pdf")
stressplot(nmds_bray)
#dev.off()
#pdf("results/plots/03.diversity/05.NMDS_Bray_Location.pdf")
nmds_bray_plot
#dev.off()
nmds_bray_plot
#Weigthed UniFrac take relative abundance and it is less sensitive to sample size
nmds_wunifrac <- ordinate(physeq_qiime2, method = "NMDS", distance = "wunifrac")
#### Bray-Curtis depth
#extract metadata
metadata <- data.frame(phyloseq::sample_data(physeq_qiime2),
check.names = FALSE)
#get significant difference between Depth with anosim
anosim_depth <- anosim(x= as.data.frame(t(otu_table(physeq_qiime2))),
grouping = metadata$Depth,
permutations = 9999, distance = "bray")
anosim_depth
nmds_bray_depth_plot <- plot_ordination(physeq_qiime2, nmds_bray, label = "Sample",
color = "Depth", shape = "Location") + theme_bw() +
labs(col = "Depth") + labs(title="NMDS, Bray-Curtis distance\nANOSIM Depth: R=0.1356, p=0.0045, Permutations=9999") +
geom_point(size=3) + theme_bw()
nmds_bray_depth_plot <- nmds_bray_depth_plot +
annotate("text", x = Inf, y = -Inf, label = paste("Stress:", var_stress_nmds_bray),
hjust = 2.1, vjust = -1.9, size = 4)
nmds_bray_depth_plot
##### Site
#get significant difference between Depth with anosim
anosim_site <- anosim(x= as.data.frame(t(otu_table(physeq_qiime2))),
grouping = metadata$Site,
permutations = 9999, distance = "bray")
anosim_site
nmds_bray_site_plot <- plot_ordination(physeq_qiime2, nmds_bray, label = "Sample",
color = "Site", shape = "Depth") + theme_bw() +
labs(col = "site") + labs(title="NMDS, Bray-Curtis distance\nANOSIM Site: R=0.4105, p=0.0001, Permutations=9999") +
geom_point(size=3) + theme_bw()
nmds_bray_site_plot <- nmds_bray_site_plot +
annotate("text", x = Inf, y = -Inf, label = paste("Stress:", var_stress_nmds_bray),
hjust = 2.1, vjust = -1.9, size = 4)
nmds_bray_site_plot
#### obs and shannon
### Get simple alpha diversity plots by location, practices, and both
alpha_depth_plot <- plot_richness(physeq_qiime2, color = "Depth", x = "Depth", measures = c("Observed", "Shannon")) +
geom_boxplot(aes(fill = Depth), alpha=.7) + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") + theme_bw()
alpha_location_plot <- plot_richness(physeq_qiime2, color = "Location", x = "Location", measures = c("Observed", "Shannon")) +
geom_boxplot(aes(fill = Location), alpha=.7) + scale_color_brewer(palette = "Set2") +
scale_fill_brewer(palette = "Set2") +theme_bw() + theme(axis.text.x  = element_text(angle = 10))
alpha_site_plot <- plot_richness(physeq_qiime2, color = "Site", x = "Site", measures = c("Observed", "Shannon")) +
geom_boxplot(aes(fill = Site), alpha=.7) + scale_color_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Set1") +theme_bw() + theme(axis.text.x  = element_text(angle = 10))
alpha_site_and_depth_plot <-plot_richness(physeq_qiime2, color = "Site", x = "Site", measures = c("Observed", "Shannon")) +
geom_boxplot(aes(fill = Depth), alpha=.7) + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2") + theme_bw() + theme(axis.text.x  = element_text(angle = 10))
alpha_depth_plot
alpha_location_plot
alpha_site_plot
alpha_site_and_depth_plot
# Estimate faith diversity
alpha_pd <- estimate_pd(physeq_qiime2)
## Abundances
### 0.6  abundances
library(ampvis2)
# Necesitamos extraer la tabla de read counts y la tabla de taxonomÃ­a del objeto physeq_filter_phyla
# Extraemos las tablas
otu_table_ampvis <- data.frame(OTU = rownames(phyloseq::otu_table(physeq_qiime2)@.Data),
phyloseq::otu_table(physeq_qiime2)@.Data,
phyloseq::tax_table(physeq_qiime2)@.Data,
check.names = FALSE
)
# Metadada
meta_data_ampvis <- data.frame(phyloseq::sample_data(physeq_qiime2),
check.names = FALSE
)
#  cambiamos el indice por una columna que se llame SampleID
meta_data_ampvis <- meta_data_ampvis %>% rownames_to_column(var = "SampleID")
# ampvis object
av2 <- amp_load(otu_table_ampvis, meta_data_ampvis)
#heatmap abundances
ampv_heatmap_abundances_genus <- amp_heatmap(av2,
group_by = "Site",
facet_by = "Location",
plot_values = TRUE,
tax_show = 20,
tax_aggregate = "Genus",
#tax_add = "Family",
plot_colorscale = "log10",
plot_legendbreaks = c(1, 5, 5),
color_vector = c("white","deepskyblue3","magenta3")
)
ampv_heatmap_abundances_genus
ampv_heatmap_abundances_family <- amp_heatmap(av2,
group_by = "Site",
facet_by = "Location",
plot_values = TRUE,
tax_show = 20,
tax_aggregate = "Family",
tax_add = "Phylum",
plot_colorscale = "log10",
plot_legendbreaks = c(1, 5, 5),
color_vector = c("white","deepskyblue3","magenta3")
)
ampv_heatmap_abundances_family
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
#tree = "results/04.qiime/",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
#Acumulation curves
#library(ranacapa)
## 03.2 Get accumulation curves
acumulation_curves <- ggrare(physeq_qiime2, step = 100, color = "Site", label = "Sample")
physeq_qiime2@otu_table
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
#tree = "results/04.qiime/",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
#Acumulation curves
#library(ranacapa)
## 03.2 Get accumulation curves
acumulation_curves <- ggrare(physeq_qiime2, step = 100, color = "Site", label = "Sample")
#custom plot
acumulation_curves_plot <- acumulation_curves + facet_wrap(~Site) +
labs(title="Accumulative curves") + theme_bw() + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
#save plot
pdf("../results/plots/Rarefaction_curves_ranacapa.pdf")
acumulation_curves_plot
dev.off()
acumulation_curves_plot
ggsave("../results/plots/Rarefaction_curves_ranacapa.png")
acumulation_curves_plot
#Define package vectors
cran_packages <- c("knitr", "qtl", "bookdown", "magrittr", "plyr", "ggplot2",
"grid","gridExtra", "tidyverse", "devtools", "dplyr",
"pheatmap", "xtable",
"kableExtra", "remotes", "Rtsne", "vegan", "RColorBrewer",
"PoiClaClu",
"gtools", "gplots", "reshape2", "MASS", "usethis",
"indicspecies", "Polychrome")
bioc_packages <- c("airway", "phyloseq", "dada2", "DECIPHER", "phangorn",
"ggpubr","DESeq2",
"genefilter", "philr", "GenomeInfoDb", "microbiome",
"metagenomeSeq", "mia", "curatedMetagenomicData",
"ANCOMBC","microbiomeMarker")
git_packages <- c("btools", "fantaxtic", "ampvis2", "tsnemicrobiota",
"qiime2R", "ranacapa")
#Load libraries
sapply(c(cran_packages, bioc_packages, git_packages), require, character.only = TRUE)
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
#tree = "results/04.qiime/",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "../results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
acumulation_curves
acumulation_curves_plot
sample_data(physeq_qiime2
)
colnames(sample_data(physeq_qiime2))
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "pH.int") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "../results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
# 02. Explore prevalence
## 02.1 Get prevalence
prevdf = apply(X = otu_table(physeq_qiime2),
MARGIN = ifelse(taxa_are_rows(physeq_qiime2), yes = 1, no = 2),
FUN = function(x){sum(x > 0)})
## 02.2 Add taxonomy
prevdf = data.frame(Prevalence = prevdf,
TotalAbundance = taxa_sums(physeq_qiime2),
tax_table(physeq_qiime2))
## 02.3 Check prevalence at Phylum level
dfprev <- plyr::ddply(prevdf, "Phylum", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
## 02.4 Get genus prevalence plot
prevalence_genus = subset(prevdf, Genus %in% get_taxa_unique(physeq_qiime2, "Genus"))
prev_genus <- ggplot(prevalence_genus, aes(TotalAbundance,
Prevalence /nsamples(physeq_qiime2),color=Genus)) +
geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) +  geom_point(size = 2, alpha = 0.7) +
scale_x_log10() +  xlab("Total Abundance") + ylab("Prevalence") +
facet_wrap(~Phylum) + theme(legend.position="none")
#save prevalence plot
#pdf("results/plots/03.diversity/01.Prevalence_Phylum_and_genus.pdf")
prev_genus
#dev.off()
prev_genus
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
freq_samples$data
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "ID", "Depth_cm") + theme_bw()
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "ID", "Depth_cm") + theme_bw()
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
freq_samples
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "ID", "Depth_cm") + theme_bw()
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "../results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "ID", "Depth_cm") + theme_bw()
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = Groups, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
freq_samples$data
freq_samples$data$Groups
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = .group, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
summary(sample_data(physeq_qiime2)$Site)
summary(sample_data(physeq_qiime2)$Depth_cm)
library(ggplot2)
library(dplyr)
# Asumiendo que sample_data(physeq_qiime2) devuelve un data.frame
data <- sample_data(physeq_qiime2)
# Crear un resumen de los datos
data_summary <- data %>%
group_by(Site, Depth_cm) %>%
summarise(n = n(), .groups = 'drop')
# Crear el grÃ¡fico
freq_samples <- ggplot(data_summary, aes(x = Site, y = n, fill = as.factor(Depth_cm))) +
geom_bar(stat = "identity", position = position_dodge(preserve = "single")) +
labs(title = "Number of samples by Site and Depth_cm", x = "Site", y = "Number of Samples") +
scale_fill_brewer(palette = "Set2") +
theme_bw()
print(freq_samples)
library(dplyr)
data <- sample_data(physeq_qiime2)
# Verificar la distribuciÃ³n de Site y Depth_cm
table(data$Site, data$Depth_cm)
sum(is.na(data$Site))
sum(is.na(data$Depth_cm))
data$Site <- trimws(data$Site)
data$Depth_cm <- trimws(data$Depth_cm)
library(tidyr)
# Completar los datos para asegurarnos de que todas las combinaciones estÃ¡n presentes
data_summary <- data %>%
group_by(Site, Depth_cm) %>%
summarise(n = n(), .groups = 'drop') %>%
complete(Site, Depth_cm, fill = list(n = 0))  # Rellena con ceros donde no hay datos
# Crear el grÃ¡fico
freq_samples <- ggplot(data_summary, aes(x = Site, y = n, fill = as.factor(Depth_cm))) +
geom_bar(stat = "identity", position = position_dodge(preserve = "single")) +
labs(title = "Number of samples by Site and Depth_cm", x = "Site", y = "Number of Samples") +
scale_fill_brewer(palette = "Set2") +
theme_bw()
print(freq_samples)
# Crear un resumen de los datos por ID y Depth_cm
data_summary_id <- data %>%
group_by(ID, Depth_cm) %>%
summarise(n = n(), .groups = 'drop')
data <- sample_data(physeq_qiime2)
data <- sample_data(physeq_qiime2)
conteo <- table(data$Site, data$Depth_cm)
conteo
# Revisar si hay valores NA
sum(is.na(metadata$Site))
sum(is.na(metadata$Depth_cm))
# Verificar valores Ãºnicos para identificar posibles espacios o inconsistencias
unique(metadata$Site)
unique(metadata$Depth_cm)
getwd()
setwd("src")
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "../results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "../data/metadata.tsv")
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = .group, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
sample_data(physeq_qiime2
)
colnames(sample_data(physeq_qiime2))
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "../results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "../results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "../results/04.qiime/taxonomy.qza",
metadata = "/axolote/diana/manglares/v0.2/data/metadata.tsv")
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = .group, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
data <- sample_data(physeq_qiime2)
conteo <- table(data$Site, data$Depth_cm)
conteo
metadata$Site <- trimws(metadata$Site)
metadata$Depth_cm <- trimws(metadata$Depth_cm)
# Revisar si hay valores NA
sum(is.na(metadata$Site))
sum(is.na(metadata$Depth_cm))
# Verificar valores Ãºnicos para identificar posibles espacios o inconsistencias
unique(metadata$Site)
unique(metadata$Depth_cm)
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "/axolote/diana/manglares/v0.2/results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "/axolote/diana/manglares/v0.2/results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "/axolote/diana/manglares/v0.2/results/04.qiime/taxonomy.qza",
metadata = "/axolote/diana/manglares/v0.2/data/metadata.tsv")
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
freq_samples
# Revisar si hay valores NA
sum(is.na(metadata$Site))
sum(is.na(metadata$Depth_cm))
# Verificar valores Ãºnicos para identificar posibles espacios o inconsistencias
unique(metadata$Site)
unique(metadata$Depth_cm)
#Define package vectors
cran_packages <- c("knitr", "qtl", "bookdown", "magrittr", "plyr", "ggplot2",
"grid","gridExtra", "tidyverse", "devtools", "dplyr",
"pheatmap", "xtable",
"kableExtra", "remotes", "Rtsne", "vegan", "RColorBrewer",
"PoiClaClu",
"gtools", "gplots", "reshape2", "MASS", "usethis",
"indicspecies", "Polychrome")
bioc_packages <- c("airway", "phyloseq", "dada2", "DECIPHER", "phangorn",
"ggpubr","DESeq2",
"genefilter", "philr", "GenomeInfoDb", "microbiome",
"metagenomeSeq", "mia", "curatedMetagenomicData",
"ANCOMBC","microbiomeMarker")
git_packages <- c("btools", "fantaxtic", "ampvis2", "tsnemicrobiota",
"qiime2R", "ranacapa")
#Load libraries
sapply(c(cran_packages, bioc_packages, git_packages), require, character.only = TRUE)
#Define package vectors
cran_packages <- c("knitr", "qtl", "bookdown", "magrittr", "plyr", "ggplot2",
"grid","gridExtra", "tidyverse", "devtools", "dplyr",
"pheatmap", "xtable",
"kableExtra", "remotes", "Rtsne", "vegan", "RColorBrewer",
"PoiClaClu",
"gtools", "gplots", "reshape2", "MASS", "usethis",
"indicspecies", "Polychrome")
bioc_packages <- c("airway", "phyloseq", "dada2", "DECIPHER", "phangorn",
"ggpubr","DESeq2",
"genefilter", "philr", "GenomeInfoDb", "microbiome",
"metagenomeSeq", "mia", "curatedMetagenomicData",
"ANCOMBC","microbiomeMarker")
git_packages <- c("btools", "fantaxtic", "ampvis2", "tsnemicrobiota",
"qiime2R", "ranacapa")
#Load libraries
sapply(c(cran_packages, bioc_packages, git_packages), require, character.only = TRUE)
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "/axolote/diana/manglares/v0.2/results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "/axolote/diana/manglares/v0.2/results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "/axolote/diana/manglares/v0.2/results/04.qiime/taxonomy.qza",
metadata = "/axolote/diana/manglares/v0.2/data/metadata.tsv")
# 02. Explore prevalence
## 02.1 Get prevalence
prevdf = apply(X = otu_table(physeq_qiime2),
MARGIN = ifelse(taxa_are_rows(physeq_qiime2), yes = 1, no = 2),
FUN = function(x){sum(x > 0)})
## 02.2 Add taxonomy
prevdf = data.frame(Prevalence = prevdf,
TotalAbundance = taxa_sums(physeq_qiime2),
tax_table(physeq_qiime2))
## 02.3 Check prevalence at Phylum level
dfprev <- plyr::ddply(prevdf, "Phylum", function(df1){cbind(mean(df1$Prevalence),sum(df1$Prevalence))})
## 02.4 Get genus prevalence plot
prevalence_genus = subset(prevdf, Genus %in% get_taxa_unique(physeq_qiime2, "Genus"))
prev_genus <- ggplot(prevalence_genus, aes(TotalAbundance,
Prevalence /nsamples(physeq_qiime2),color=Genus)) +
geom_hline(yintercept = 0.05, alpha = 0.5, linetype = 2) +  geom_point(size = 2, alpha = 0.7) +
scale_x_log10() +  xlab("Total Abundance") + ylab("Prevalence") +
facet_wrap(~Phylum) + theme(legend.position="none")
#save prevalence plot
#pdf("results/plots/03.diversity/01.Prevalence_Phylum_and_genus.pdf")
prev_genus
#dev.off()
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = .group, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
data <- (sample_data(physeq_qiime2)
)
data
unique(data$Site)
unique(data$Depth_cm)
sum(is.na(data$Site))
sum(is.na(data$Depth_cm))
# Crear la tabla de contingencia
conteo_correcto <- table(data$Site, data$Depth_cm)
# Mostrar la tabla de contingencia
print(conteo_correcto)
# 01. Load data
physeq_qiime2 <- qza_to_phyloseq(
features = "/axolote/diana/manglares/v0.2/results/04.qiime/ASV_table_filter_freq218_aemc.qza",
tree = "/axolote/diana/manglares/v0.2/results/04.qiime/rooted-tree-iqtree.qza",
taxonomy = "/axolote/diana/manglares/v0.2/results/04.qiime/taxonomy.qza",
metadata = "/axolote/diana/manglares/v0.2/data/metadata.tsv")
library(ggplot2)
freq_samples <- plot_frequencies(sample_data(physeq_qiime2), "Site", "Depth_cm") + theme_bw()
#pdf("results/plots/03.diversity/Number_of_Samples.pdf")
freq_samples <- ggplot(freq_samples$data, aes(x = .group, y = n, fill = Factor)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Number of samples by Site and Depth") +
theme_bw() + scale_color_brewer(palette = "Set2") + scale_fill_brewer(palette = "Set2")
#dev.off()
freq_samples
data <- sample_data(physeq_qiime2)
conteo <- table(data$Site, data$Depth_cm)
conteo
reticulate::repl_python()
